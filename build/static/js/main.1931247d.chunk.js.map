{"version":3,"sources":["assets/images/illustration.svg","assets/images/logo.svg","assets/images/logoDark.svg","assets/images/google-icon.svg","services/firebase.ts","components/Button/style.ts","components/Button/index.tsx","contexts/AuthContext.tsx","hooks/useAuth.ts","contexts/ThemeSelectorContext.tsx","pages/Home/styles.tsx","pages/Home/index.tsx","pages/NewRoom/styles.tsx","pages/NewRoom/index.tsx","components/Question/style.ts","components/Question/index.tsx","assets/images/copy.svg","components/RoomCode/style.ts","components/RoomCode/index.tsx","hooks/useRoom.ts","pages/Room/styles.tsx","pages/Room/index..tsx","assets/images/delete.svg","assets/images/check.svg","assets/images/answer.svg","pages/AdminRoom/styles.tsx","pages/AdminRoom/index.tsx","styles/theme.ts","styles/global.ts","components/Switch/style.ts","components/Switch/index.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","ButtonComponent","styled","button","theme","primary","textLight","Button","isOutlined","props","className","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","ThemeSelector","ThemeSelectorContextProvider","dark","setDark","SetThemeProvider","ContainerPageAuth","div","smothWhite","MainContainer","lightGrey","grey","highlightedPrimary","CreateRoomContainer","googleBackgroundHighlighted","SeparatorDiv","Home","history","useHistory","roomCode","setRoomCode","push","event","preventDefault","trim","ref","get","roomRef","exists","alert","val","endedAt","src","illustrationImg","alt","logoImgDark","logoImg","onClick","googleIconImg","onSubmit","type","placeholder","onChange","target","strongTextColor","NewRoom","newRoom","setNewRoom","title","authorId","firebaseRoom","key","to","QuestionStyle","inverted","mediumGrey","Question","content","author","isAnswered","isHighlighted","cx","answered","highlighted","RoomCodeStyle","RoomCode","navigator","clipboard","writeText","code","copyImg","useRoom","roomId","questions","setQuestions","setTitle","on","room","databaseRoom","firebaseQuestions","parsedQuestions","Object","entries","map","likeCount","values","likes","length","likeId","find","off","PageRoom","lightBorder","TextAreaBackground","Room","params","useParams","newQuestion","setNewQuestion","question","questionId","remove","disabled","aria-label","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","update","Date","window","confirm","handleCheckQuestionAsAnswered","checkImg","handleHighlightQuestion","answerImg","handleDeleteQuestion","deleteImg","Theme","Inverted","globalBackground","globalColor","DarkTheme","GlobalStyle","createGlobalStyle","color","SwitchContainer","state","InsideIndicator","SwitchComponent","App","setTheme","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1931247d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/logoDark.555a0528.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import firebase from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst database = firebase.database();\n\nexport { firebase, auth, database }","import styled from 'styled-components'\r\n\r\nexport const ButtonComponent = styled.button`\r\n  height: 50px;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n  background: ${({ theme }) => theme.primary};\r\n  color: ${({ theme }) => theme.textLight};\r\n  padding: 0 32px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n  border: 0;\r\n\r\n  transition: filter 0.2s;\r\n\r\n  img {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  &.outlined {\r\n    background: #FFF;\r\n    border: 1px solid ${({ theme }) => theme.primary};\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  &:not(:disabled):hover {\r\n    filter: brightness(0.9);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n`;","import { ButtonHTMLAttributes } from 'react'\n\n// import '../styles/button.scss';\n\nimport { ButtonComponent } from './style'\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  isOutlined?: boolean\n}\n\nexport function Button({ isOutlined = false, ...props }: ButtonProps) {\n  return (\n    <ButtonComponent\n      className={`button ${isOutlined ? 'outlined' : ''}`}\n      {...props}\n    />\n  )\n}\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { auth, firebase } from \"../services/firebase\";\n\ntype User = {\n  id: string;\n  name: string;\n  avatar: string;\n}\n\ntype AuthContextType = {\n  user: User | undefined;\n  signInWithGoogle: () => Promise<void>;\n}\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nexport function AuthContextProvider(props: AuthContextProviderProps) {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const { displayName, photoURL, uid } = user\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Google Account.');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })\n      }\n    })\n\n    return () => {\n      unsubscribe();\n    }\n  }, [])\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const { displayName, photoURL, uid } = result.user\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account.');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      })\n    }\n  }\n  \n  return (\n    <AuthContext.Provider value={{ user, signInWithGoogle }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}","import { useContext } from 'react';\nimport { AuthContext } from '../contexts/AuthContext'\n\nexport function useAuth() {\n  const value = useContext(AuthContext)\n\n  return value;\n}","import { createContext, ReactNode, useState } from 'react'\r\n\r\ntype ThemeSelectorProps = {\r\n  dark: boolean\r\n  SetThemeProvider: () => void\r\n}\r\n\r\ntype ThemeSelectorContextProviderProps = {\r\n  children: ReactNode\r\n}\r\n\r\nexport const ThemeSelector = createContext({} as ThemeSelectorProps)\r\n\r\nexport function ThemeSelectorContextProvider(\r\n  props: ThemeSelectorContextProviderProps\r\n) {\r\n  const [dark, setDark] = useState(false)\r\n\r\n  function SetThemeProvider() {\r\n    setDark(!dark)\r\n  }\r\n\r\n  return (\r\n    <ThemeSelector.Provider value={{ dark, SetThemeProvider }}>\r\n      {props.children}\r\n    </ThemeSelector.Provider>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerPageAuth = styled.div`\r\n  display: flex;\r\n  align-items: stretch;\r\n  height: 100vh;\r\n\r\n  & aside {\r\n    flex: 7;\r\n\r\n    background: ${({ theme }) => theme.primary};\r\n    color: ${({ theme }) => theme.textLight};\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    padding: 120px 80px;\r\n\r\n    & img {\r\n      max-width: 320px;\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationOpacity;\r\n      animation-duration: 1s;\r\n    }\r\n\r\n    & strong {\r\n      font: 700 36px 'Poppins', sans-serif;\r\n      line-height: 42px;\r\n      margin-top: 16px;\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationOpacity;\r\n      animation-duration: 1s;\r\n    }\r\n\r\n    & p {\r\n      font-size: 24px;\r\n      line-height: 32px;\r\n      margin-top: 16px;\r\n      color: ${({ theme }) => theme.smothWhite};\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationOpacity;\r\n      animation-duration: 1s;\r\n    }\r\n  }\r\n\r\n  @keyframes animationOpacity {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  & main {\r\n    flex: 8;\r\n\r\n    padding: 0 32px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  top: 0;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  align-items: stretch;\r\n  text-align: center;\r\n  opacity: 1;\r\n  overflow-y: hidden;\r\n\r\n  @keyframes animationDownToPosition {\r\n    0% {\r\n      top: 100vw;\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  & > img {\r\n    align-self: center;\r\n    position: relative;\r\n    top: 0;\r\n    animation-name: animationDownToPosition;\r\n    animation-duration: 1s;\r\n  }\r\n\r\n  & h2 {\r\n    font-size: 24px;\r\n    margin: 64px 0 24px;\r\n    font-family: 'Poppins', sans-serif;\r\n    position: relative;\r\n    top: 0;\r\n    animation-name: animationDownToPosition;\r\n    animation-duration: 1s;\r\n  }\r\n\r\n  & form {\r\n    position: relative;\r\n    top: 0;\r\n    animation-name: animationDownToPosition;\r\n    animation-duration: 1s;\r\n    & input {\r\n      height: 50px;\r\n      border-radius: 8px;\r\n      padding: 0 16px;\r\n      background: #fff;\r\n      border: 1px solid ${({ theme }) => theme.lightGrey};\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationDownToPosition;\r\n      animation-duration: 1.2s;\r\n    }\r\n\r\n    & button {\r\n      margin-top: 16px;\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationDownToPosition;\r\n      animation-duration: 1.3s;\r\n    }\r\n\r\n    & button,\r\n    input {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    font-size: 14px;\r\n    color: ${({ theme }) => theme.grey};\r\n    margin-top: 16px;\r\n\r\n    & a {\r\n      color: ${({ theme }) => theme.highlightedPrimary};\r\n    }\r\n  }\r\n`\r\n\r\nexport const CreateRoomContainer = styled.button`\r\n  margin-top: 64px;\r\n  height: 50px;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n  background: ${({ theme }) => theme.googleBackgroundHighlighted};\r\n  color: ${({ theme }) => theme.textLight};\r\n  position: relative;\r\n  top: 0;\r\n  animation-name: animationDownToPosition;\r\n  animation-duration: 1.4s;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n  border: 0;\r\n\r\n  transition: filter 0.2s;\r\n\r\n  & img {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  &:hover {\r\n    filter: brightness(0.9);\r\n  }\r\n\r\n  @keyframes animationDownToPosition {\r\n    0% {\r\n      top: 100vw;\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nexport const SeparatorDiv = styled.div`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.lightGrey};\r\n\r\n  margin: 32px 0;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  position: relative;\r\n  top: 0;\r\n  animation-name: animationDownToPosition;\r\n  animation-duration: 1.3s;\r\n\r\n  &::before {\r\n    content: '';\r\n    flex: 1;\r\n    height: 1px;\r\n    background: ${({ theme }) => theme.lightGrey};\r\n    margin-right: 16px;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    height: 1px;\r\n    background: ${({ theme }) => theme.lightGrey};\r\n    margin-left: 16px;\r\n  }\r\n\r\n  @keyframes animationDownToPosition {\r\n    0% {\r\n      top: 100vw;\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n","import { useHistory } from 'react-router-dom'\nimport { FormEvent, useState, useContext } from 'react'\n\nimport illustrationImg from '../../assets/images/illustration.svg'\nimport logoImg from '../../assets/images/logo.svg'\nimport logoImgDark from '../../assets/images/logoDark.svg'\nimport googleIconImg from '../../assets/images/google-icon.svg'\n\nimport { database } from '../../services/firebase'\n\nimport { Button } from '../../components/Button'\nimport { useAuth } from '../../hooks/useAuth'\n\nimport { ThemeSelector } from '../../contexts/ThemeSelectorContext'\n\nimport {\n  ContainerPageAuth,\n  MainContainer,\n  CreateRoomContainer,\n  SeparatorDiv\n} from './styles'\n\n// import '../../styles/auth.scss';\n\nfunction Home() {\n  const history = useHistory()\n  const { user, signInWithGoogle } = useAuth()\n  const [roomCode, setRoomCode] = useState('')\n  const value = useContext(ThemeSelector)\n\n  async function handleCreateRoom() {\n    if (!user) {\n      await signInWithGoogle()\n    }\n\n    history.push('/rooms/new')\n  }\n\n  async function handleJoinRoom(event: FormEvent) {\n    event.preventDefault()\n\n    if (roomCode.trim() === '') {\n      return\n    }\n\n    const roomRef = await database.ref(`rooms/${roomCode}`).get()\n\n    if (!roomRef.exists()) {\n      alert('Room does not exists.')\n      return\n    }\n\n    if (roomRef.val().endedAt) {\n      alert('Room already closed.')\n      return\n    }\n\n    history.push(`/rooms/${roomCode}`)\n  }\n\n  return (\n    <ContainerPageAuth>\n      <aside>\n        <img\n          src={illustrationImg}\n          alt=\"Ilustração simbolizando perguntas e respostas\"\n        />\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\n        <p>Tire as dúvidas da sua audiência em tempo-real</p>\n      </aside>\n      <main>\n        <MainContainer>\n          {value.dark ? (\n            <img src={logoImgDark} alt=\"Letmeask\" />\n          ) : (\n            <img src={logoImg} alt=\"Letmeask\" />\n          )}\n          <CreateRoomContainer onClick={handleCreateRoom}>\n            <img src={googleIconImg} alt=\"Logo do Google\" />\n            Crie sua sala com o Google\n          </CreateRoomContainer>\n          <SeparatorDiv>ou entre em uma sala</SeparatorDiv>\n          <form onSubmit={handleJoinRoom}>\n            <input\n              type=\"text\"\n              placeholder=\"Digite o código da sala\"\n              onChange={event => setRoomCode(event.target.value)}\n              value={roomCode}\n            />\n            <Button type=\"submit\">Entrar na sala</Button>\n          </form>\n        </MainContainer>\n      </main>\n    </ContainerPageAuth>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\r\n\r\nexport const ContainerPageAuth = styled.div`\r\n  display: flex;\r\n  align-items: stretch;\r\n  height: 100vh;\r\n\r\n  & aside {\r\n    flex: 7;\r\n\r\n    background: ${({ theme }) => theme.primary};\r\n    color: ${({ theme }) => theme.textLight};\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    padding: 120px 80px;\r\n\r\n    & img {\r\n      max-width: 320px;\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationOpacity;\r\n      animation-duration: 1s;\r\n    }\r\n\r\n    & strong {\r\n      font: 700 36px 'Poppins', sans-serif;\r\n      line-height: 42px;\r\n      margin-top: 16px;\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationOpacity;\r\n      animation-duration: 1s;\r\n    }\r\n\r\n    & p {\r\n      font-size: 24px;\r\n      line-height: 32px;\r\n      margin-top: 16px;\r\n      color: ${({ theme }) => theme.smothWhite};\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationOpacity;\r\n      animation-duration: 1s;\r\n    }\r\n  }\r\n\r\n  @keyframes animationOpacity {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  & main {\r\n    flex: 8;\r\n\r\n    padding: 0 32px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  top: 0;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  align-items: stretch;\r\n  text-align: center;\r\n  opacity: 1;\r\n  overflow-y: hidden;\r\n\r\n  @keyframes animationDownToPosition {\r\n    0% {\r\n      top: 100vw;\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  & > img {\r\n    align-self: center;\r\n    position: relative;\r\n    top: 0;\r\n    animation-name: animationDownToPosition;\r\n    animation-duration: 1s;\r\n  }\r\n\r\n  & h2 {\r\n    font-size: 24px;\r\n    margin: 64px 0 24px;\r\n    font-family: 'Poppins', sans-serif;\r\n    position: relative;\r\n    top: 0;\r\n    animation-name: animationDownToPosition;\r\n    animation-duration: 1s;\r\n    color: ${({ theme }) => theme.strongTextColor};\r\n  }\r\n\r\n  & form {\r\n    position: relative;\r\n    top: 0;\r\n    animation-name: animationDownToPosition;\r\n    animation-duration: 1s;\r\n    & input {\r\n      height: 50px;\r\n      border-radius: 8px;\r\n      padding: 0 16px;\r\n      background: #fff;\r\n      border: 1px solid ${({ theme }) => theme.lightGrey};\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationDownToPosition;\r\n      animation-duration: 1.2s;\r\n    }\r\n\r\n    & button {\r\n      margin-top: 16px;\r\n      position: relative;\r\n      top: 0;\r\n      animation-name: animationDownToPosition;\r\n      animation-duration: 1.3s;\r\n    }\r\n\r\n    & button,\r\n    input {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    font-size: 14px;\r\n    color: ${({ theme }) => theme.grey};\r\n    margin-top: 16px;\r\n    position: relative;\r\n    top: 0;\r\n    animation-name: animationDownToPosition;\r\n    animation-duration: 1.4s;\r\n\r\n    & a {\r\n      color: ${({ theme }) => theme.highlightedPrimary};\r\n    }\r\n  }\r\n`\r\n","import { FormEvent, useState, useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport illustrationImg from '../../assets/images/illustration.svg'\nimport logoImg from '../../assets/images/logo.svg'\nimport logoImgDark from '../../assets/images/logoDark.svg'\n\nimport { Button } from '../../components/Button'\nimport { database } from '../../services/firebase'\nimport { useAuth } from '../../hooks/useAuth'\n\nimport { ContainerPageAuth, MainContainer } from './styles'\n\n// import '../styles/auth.scss'\n\nimport { ThemeSelector } from '../../contexts/ThemeSelectorContext'\n\nexport default function NewRoom() {\n  const { user } = useAuth()\n  const history = useHistory()\n  const [newRoom, setNewRoom] = useState('')\n  const value = useContext(ThemeSelector)\n\n  async function handleCreateRoom(event: FormEvent) {\n    event.preventDefault()\n\n    if (newRoom.trim() === '') {\n      return\n    }\n\n    const roomRef = database.ref('rooms')\n\n    const firebaseRoom = await roomRef.push({\n      title: newRoom,\n      authorId: user?.id\n    })\n\n    history.push(`/rooms/${firebaseRoom.key}`)\n  }\n\n  return (\n    <ContainerPageAuth>\n      <aside>\n        <img\n          src={illustrationImg}\n          alt=\"Ilustração simbolizando perguntas e respostas\"\n        />\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\n        <p>Tire as dúvidas da sua audiência em tempo-real</p>\n      </aside>\n      <main>\n        <MainContainer>\n          {value.dark ? (\n            <img src={logoImgDark} alt=\"Letmeask\" />\n          ) : (\n            <img src={logoImg} alt=\"Letmeask\" />\n          )}\n          <h2>Criar uma nova sala</h2>\n          <form onSubmit={handleCreateRoom}>\n            <input\n              type=\"text\"\n              placeholder=\"Nome da sala\"\n              onChange={event => setNewRoom(event.target.value)}\n              value={newRoom}\n            />\n            <Button type=\"submit\">Criar sala</Button>\n          </form>\n          <p>\n            Quer entrar em uma sala existente? <Link to=\"/\">clique aqui</Link>\n          </p>\n        </MainContainer>\n      </main>\n    </ContainerPageAuth>\n  )\n}\n","import styled from 'styled-components'\r\n\r\nexport const QuestionStyle = styled.div`\r\n  background: ${({ theme }) => theme.textLight};\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);\r\n  padding: 24px;\r\n\r\n  & + .question {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  &.highlighted {\r\n    background: #f4f0ff;\r\n    border: 1px solid ${({ theme }) => theme.primary};\r\n\r\n    footer .user-info span {\r\n      color: ${({ theme }) => theme.inverted};\r\n    }\r\n  }\r\n\r\n  &.answered {\r\n    background: ${({ theme }) => theme.mediumGrey};\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.inverted};\r\n  }\r\n\r\n  footer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 24px;\r\n\r\n    .user-info {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      img {\r\n        width: 32px;\r\n        height: 32px;\r\n        border-radius: 50%;\r\n      }\r\n\r\n      span {\r\n        margin-left: 8px;\r\n        color: ${({ theme }) => theme.grey};\r\n        font-size: 14px;\r\n      }\r\n    }\r\n\r\n    > div {\r\n      display: flex;\r\n      gap: 16px;\r\n    }\r\n\r\n    button {\r\n      border: 0;\r\n      background: transparent;\r\n      cursor: pointer;\r\n      transition: filter 0.2s;\r\n\r\n      &.like-button {\r\n        display: flex;\r\n        align-items: flex-end;\r\n        color: ${({ theme }) => theme.grey};\r\n        gap: 8px;\r\n\r\n        &.liked {\r\n          color: ${({ theme }) => theme.primary};\r\n\r\n          svg path {\r\n            stroke: ${({ theme }) => theme.primary};\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        filter: brightness(0.7);\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { ReactNode } from 'react'\nimport cx from 'classnames'\n\n// import './styles.scss';\nimport { QuestionStyle } from './style'\n\ntype QuestionProps = {\n  content: string\n  author: {\n    name: string\n    avatar: string\n  }\n  children?: ReactNode\n  isAnswered?: boolean\n  isHighlighted?: boolean\n}\n\nexport function Question({\n  content,\n  author,\n  isAnswered = false,\n  isHighlighted = false,\n  children\n}: QuestionProps) {\n  return (\n    <QuestionStyle\n      className={cx(\n        'question',\n        { answered: isAnswered },\n        { highlighted: isHighlighted && !isAnswered }\n      )}\n    >\n      <p>{content}</p>\n      <footer>\n        <div className=\"user-info\">\n          <img src={author.avatar} alt={author.name} />\n          <span>{author.name}</span>\n        </div>\n        <div>{children}</div>\n      </footer>\n    </QuestionStyle>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import styled from 'styled-components'\r\n\r\nexport const RoomCodeStyle = styled.div`\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n\r\n  background: #fff;\r\n  border: 1px solid ${({ theme }) => theme.primary};\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n\r\n  div {\r\n    background: ${({ theme }) => theme.primary};\r\n    padding: 0 12px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    align-self: center;\r\n    flex: 1;\r\n    padding: 0 16px 0 12px;\r\n    width: 230px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n  }\r\n`\r\n","import copyImg from '../../assets/images/copy.svg'\n\n// import '../styles/room-code.scss';\n\nimport { RoomCodeStyle } from './style'\n\ntype RoomCodeProps = {\n  code: string\n}\n\nexport function RoomCode(props: RoomCodeProps) {\n  function copyRoomCodeToClipboard() {\n    navigator.clipboard.writeText(props.code)\n  }\n\n  return (\n    <RoomCodeStyle onClick={copyRoomCodeToClipboard}>\n      <div>\n        <img src={copyImg} alt=\"Copy room code\" />\n      </div>\n      <span>Sala #{props.code}</span>\n    </RoomCodeStyle>\n  )\n}\n","import { useEffect, useState } from \"react\";\n\nimport { database } from \"../services/firebase\";\nimport { useAuth } from \"./useAuth\";\n\ntype FirebaseQuestions = Record<string, {\n  author: {\n    name: string;\n    avatar: string;\n  }\n  content: string;\n  isAnswered: boolean;\n  isHighlighted: boolean;\n  likes: Record<string, {\n    authorId: string;\n  }>\n}>\n\ntype QuestionType = {\n  id: string;\n  author: {\n    name: string;\n    avatar: string;\n  }\n  content: string;\n  isAnswered: boolean;\n  isHighlighted: boolean;\n  likeCount: number;\n  likeId: string | undefined;\n}\n\nexport function useRoom(roomId: string) {\n  const { user } = useAuth();\n  const [questions, setQuestions] = useState<QuestionType[]>([])\n  const [title, setTitle] = useState('');\n\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n\n    roomRef.on('value', room => {\n      const databaseRoom = room.val();\n      const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\n\n      const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHighlighted: value.isHighlighted,\n          isAnswered: value.isAnswered,\n          likeCount: Object.values(value.likes ?? {}).length,\n          likeId: Object.entries(value.likes ?? {}).find(([key, like]) => like.authorId === user?.id)?.[0],\n        }\n      })\n\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestions);\n    })\n\n    return () => {\n      roomRef.off('value');\n    }\n  }, [roomId, user?.id]);\n\n  return { questions, title }\n}","import styled from 'styled-components'\r\n\r\nexport const PageRoom = styled.div`\r\n  header {\r\n    padding: 24px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightBorder};\r\n\r\n    .content {\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      > img {\r\n        max-height: 45px;\r\n      }\r\n\r\n      > div {\r\n        display: flex;\r\n        gap: 16px;\r\n\r\n        button {\r\n          height: 40px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  main {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n\r\n    .room-title {\r\n      margin: 32px 0 24px;\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      h1 {\r\n        font-family: 'Poppins', sans-serif;\r\n        font-size: 24px;\r\n        color: ${({ theme }) => theme.strongTextColor};\r\n      }\r\n\r\n      span {\r\n        margin-left: 16px;\r\n        background: ${({ theme }) => theme.highlightedPrimary};\r\n        border-radius: 9999px;\r\n        padding: 8px 16px;\r\n        color: ${({ theme }) => theme.textLight};\r\n        font-weight: 500;\r\n        font-size: 14px;\r\n      }\r\n    }\r\n\r\n    form {\r\n      textarea {\r\n        width: 100%;\r\n        border: 0;\r\n        padding: 16px;\r\n        border-radius: 8px;\r\n        background: ${({ theme }) => theme.TextAreaBackground};\r\n        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);\r\n        resize: vertical;\r\n        min-height: 130px;\r\n      }\r\n\r\n      .form-footer {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-top: 16px;\r\n\r\n        .user-info {\r\n          display: flex;\r\n          align-items: center;\r\n\r\n          img {\r\n            width: 32px;\r\n            height: 32px;\r\n            border-radius: 50%;\r\n          }\r\n\r\n          span {\r\n            margin-left: 8px;\r\n            color: ${({ theme }) => theme.strongTextColor};\r\n            font-weight: 500;\r\n            font-size: 14px;\r\n          }\r\n        }\r\n\r\n        > span {\r\n          font-size: 14px;\r\n          color: ${({ theme }) => theme.strongTextColor};\r\n          font-weight: 500;\r\n\r\n          button {\r\n            background: transparent;\r\n            border: 0;\r\n            color: ${({ theme }) => theme.primary};\r\n            text-decoration: underline;\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .question-list {\r\n      margin-top: 32px;\r\n    }\r\n  }\r\n`\r\n","import { FormEvent, useState, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport logoImg from '../../assets/images/logo.svg'\nimport logoImgDark from '../../assets/images/logoDark.svg'\n\nimport { Button } from '../../components/Button'\nimport { Question } from '../../components/Question'\nimport { RoomCode } from '../../components/RoomCode'\nimport { useAuth } from '../../hooks/useAuth'\nimport { useRoom } from '../../hooks/useRoom'\nimport { database } from '../../services/firebase'\n\n// import '../styles/room.scss';\n\nimport { PageRoom } from './styles'\n\nimport { ThemeSelector } from '../../contexts/ThemeSelectorContext'\n\ntype RoomParams = {\n  id: string\n}\n\nexport default function Room() {\n  const { user } = useAuth()\n  const params = useParams<RoomParams>()\n  const value = useContext(ThemeSelector)\n\n  const [newQuestion, setNewQuestion] = useState('')\n  const roomId = params.id\n\n  const { title, questions } = useRoom(roomId)\n\n  async function handleSendQuestion(event: FormEvent) {\n    event.preventDefault()\n\n    if (newQuestion.trim() === '') {\n      return\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in')\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighlighted: false,\n      isAnswered: false\n    }\n\n    await database.ref(`rooms/${roomId}/questions`).push(question)\n\n    setNewQuestion('')\n  }\n\n  async function handleLikeQuestion(\n    questionId: string,\n    likeId: string | undefined\n  ) {\n    if (likeId) {\n      await database\n        .ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`)\n        .remove()\n    } else {\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n        authorId: user?.id\n      })\n    }\n  }\n\n  return (\n    <PageRoom>\n      <header>\n        <div className=\"content\">\n          {value.dark ? (\n            <img src={logoImgDark} alt=\"Letmeask\" />\n          ) : (\n            <img src={logoImg} alt=\"Letmeask\" />\n          )}\n          <RoomCode code={roomId} />\n        </div>\n      </header>\n\n      <main>\n        <div className=\"room-title\">\n          <h1>Sala {title}</h1>\n          {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\n        </div>\n\n        <form onSubmit={handleSendQuestion}>\n          <textarea\n            placeholder=\"O que você quer perguntar?\"\n            onChange={event => setNewQuestion(event.target.value)}\n            value={newQuestion}\n          />\n\n          <div className=\"form-footer\">\n            {user ? (\n              <div className=\"user-info\">\n                <img src={user.avatar} alt={user.name} />\n                <span>{user.name}</span>\n              </div>\n            ) : (\n              <span>\n                Para enviar uma pergunta, <button>faça seu login</button>.\n              </span>\n            )}\n            <Button type=\"submit\" disabled={!user}>\n              Enviar pergunta\n            </Button>\n          </div>\n        </form>\n\n        <div className=\"question-list\">\n          {questions.map(question => {\n            return (\n              <Question\n                key={question.id}\n                content={question.content}\n                author={question.author}\n                isAnswered={question.isAnswered}\n                isHighlighted={question.isHighlighted}\n              >\n                {!question.isAnswered && (\n                  <button\n                    className={`like-button ${question.likeId ? 'liked' : ''}`}\n                    type=\"button\"\n                    aria-label=\"Marcar como gostei\"\n                    onClick={() =>\n                      handleLikeQuestion(question.id, question.likeId)\n                    }\n                  >\n                    {question.likeCount > 0 && (\n                      <span>{question.likeCount}</span>\n                    )}\n                    <svg\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\"\n                        stroke=\"#737380\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </svg>\n                  </button>\n                )}\n              </Question>\n            )\n          })}\n        </div>\n      </main>\n    </PageRoom>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","import styled from 'styled-components'\r\n\r\nexport const PageRoom = styled.div`\r\n  header {\r\n    padding: 24px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightBorder};\r\n\r\n    .content {\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      > img {\r\n        max-height: 45px;\r\n      }\r\n\r\n      > div {\r\n        display: flex;\r\n        gap: 16px;\r\n\r\n        button {\r\n          height: 40px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  main {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n\r\n    .room-title {\r\n      margin: 32px 0 24px;\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      h1 {\r\n        font-family: 'Poppins', sans-serif;\r\n        font-size: 24px;\r\n        color: ${({ theme }) => theme.strongTextColor};\r\n      }\r\n\r\n      span {\r\n        margin-left: 16px;\r\n        background: ${({ theme }) => theme.highlightedPrimary};\r\n        border-radius: 9999px;\r\n        padding: 8px 16px;\r\n        color: ${({ theme }) => theme.textLight};\r\n        font-weight: 500;\r\n        font-size: 14px;\r\n      }\r\n    }\r\n\r\n    form {\r\n      textarea {\r\n        width: 100%;\r\n        border: 0;\r\n        padding: 16px;\r\n        border-radius: 8px;\r\n        background: ${({ theme }) => theme.TextAreaBackground};\r\n        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);\r\n        resize: vertical;\r\n        min-height: 130px;\r\n      }\r\n\r\n      .form-footer {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-top: 16px;\r\n\r\n        .user-info {\r\n          display: flex;\r\n          align-items: center;\r\n\r\n          img {\r\n            width: 32px;\r\n            height: 32px;\r\n            border-radius: 50%;\r\n          }\r\n\r\n          span {\r\n            margin-left: 8px;\r\n            color: ${({ theme }) => theme.strongTextColor};\r\n            font-weight: 500;\r\n            font-size: 14px;\r\n          }\r\n        }\r\n\r\n        > span {\r\n          font-size: 14px;\r\n          color: ${({ theme }) => theme.strongTextColor};\r\n          font-weight: 500;\r\n\r\n          button {\r\n            background: transparent;\r\n            border: 0;\r\n            color: ${({ theme }) => theme.primary};\r\n            text-decoration: underline;\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .question-list {\r\n      margin-top: 32px;\r\n    }\r\n  }\r\n`\r\n","import { useHistory, useParams } from 'react-router-dom'\nimport { useContext } from 'react'\n\nimport logoImg from '../../assets/images/logo.svg'\nimport logoImgDark from '../../assets/images/logoDark.svg'\nimport deleteImg from '../../assets/images/delete.svg'\nimport checkImg from '../../assets/images/check.svg'\nimport answerImg from '../../assets/images/answer.svg'\n\nimport { Button } from '../../components/Button'\nimport { Question } from '../../components/Question'\nimport { RoomCode } from '../../components/RoomCode'\n// import { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../../hooks/useRoom'\nimport { database } from '../../services/firebase'\n\n// import '../styles/room.scss';\nimport { PageRoom } from './styles'\nimport { ThemeSelector } from '../../contexts/ThemeSelectorContext'\n\ntype RoomParams = {\n  id: string\n}\n\nexport function AdminRoom() {\n  // const { user } = useAuth();\n  const history = useHistory()\n  const params = useParams<RoomParams>()\n  const roomId = params.id\n  const value = useContext(ThemeSelector)\n\n  const { title, questions } = useRoom(roomId)\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    })\n\n    history.push('/')\n  }\n\n  async function handleDeleteQuestion(questionId: string) {\n    if (window.confirm('Tem certeza que você deseja excluir esta pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId: string) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true\n    })\n  }\n\n  async function handleHighlightQuestion(questionId: string) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true\n    })\n  }\n\n  return (\n    <PageRoom>\n      <header>\n        <div className=\"content\">\n          {value.dark ? (\n            <img src={logoImgDark} alt=\"Letmeask\" />\n          ) : (\n            <img src={logoImg} alt=\"Letmeask\" />\n          )}\n          <div>\n            <RoomCode code={roomId} />\n            <Button isOutlined onClick={handleEndRoom}>\n              Encerrar sala\n            </Button>\n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"room-title\">\n          <h1>Sala {title}</h1>\n          {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\n        </div>\n\n        <div className=\"question-list\">\n          {questions.map(question => {\n            return (\n              <Question\n                key={question.id}\n                content={question.content}\n                author={question.author}\n                isAnswered={question.isAnswered}\n                isHighlighted={question.isHighlighted}\n              >\n                {!question.isAnswered && (\n                  <>\n                    <button\n                      type=\"button\"\n                      onClick={() => handleCheckQuestionAsAnswered(question.id)}\n                    >\n                      <img\n                        src={checkImg}\n                        alt=\"Marcar pergunta como respondida\"\n                      />\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => handleHighlightQuestion(question.id)}\n                    >\n                      <img src={answerImg} alt=\"Dar destaque à pergunta\" />\n                    </button>\n                  </>\n                )}\n                <button\n                  type=\"button\"\n                  onClick={() => handleDeleteQuestion(question.id)}\n                >\n                  <img src={deleteImg} alt=\"Remover pergunta\" />\n                </button>\n              </Question>\n            )\n          })}\n        </div>\n      </main>\n    </PageRoom>\n  )\n}\n","export const Theme = {\r\n  primary: '#835afd',\r\n  smothWhite: '#f8f8f8',\r\n  textLight: '#fff',\r\n  lightBorder: '#e2e2e2',\r\n  lightGrey: '#a8a8b3',\r\n  TextAreaBackground: '#fefefe',\r\n  grey: '#737380',\r\n  Inverted: '#29292e',\r\n  mediumGrey: '#dbdcdd',\r\n  highlightedPrimary: '#e559f9',\r\n  googleBackgroundHighlighted: '#ea4335',\r\n  globalBackground: '#f8f8f8',\r\n  globalColor: '#29292e',\r\n  strongTextColor: '#000'\r\n}\r\n\r\nexport const DarkTheme = {\r\n  primary: '#835afd',\r\n  smothWhite: '#f8f8f8',\r\n  textLight: '#fff',\r\n  lightBorder: '#e2e2e2',\r\n  lightGrey: '#a8a8b3',\r\n  TextAreaBackground: '#fefefe',\r\n  grey: '#737380',\r\n  Inverted: '#29292e',\r\n  mediumGrey: '#dbdcdd',\r\n  highlightedPrimary: '#e559f9',\r\n  googleBackgroundHighlighted: '#ea4335',\r\n  globalBackground: '#232126',\r\n  globalColor: '#29292e',\r\n  strongTextColor: '#fff'\r\n}\r\n\r\nexport function SelectTheme(isDark: boolean) {\r\n  if (isDark) return DarkTheme\r\n  return Theme\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }: any) => theme.globalBackground};\r\n    color: ${({ theme }: any) => theme.color};\r\n  }\r\n\r\n  body, input, button, textarea {\r\n    font: 400 16px 'Roboto', sans-serif;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import styled from 'styled-components'\r\n\r\ntype SwitchProps = {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\r\n  state?: boolean\r\n}\r\n\r\nexport const SwitchContainer = styled.div<SwitchProps>`\r\n  position: absolute;\r\n  right: ${props => (props.state ? '10' : '50')}px;\r\n  bottom: 10px;\r\n  display: flex;\r\n  width: 100px;\r\n  height: 40px;\r\n  border-radius: 40px;\r\n  overflow: hidden;\r\n  align-items: center;\r\n  justify-content: ${props => (props.state ? 'flex-start' : 'flex-end')};\r\n  background: ${({ theme }) => theme.primary};\r\n  border: 1px solid ${({ theme }) => theme.strongTextColor};\r\n  transition: all 0.5s ease;\r\n`\r\n\r\nexport const InsideIndicator = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.strongTextColor};\r\n  transition: all 0.5s ease;\r\n`\r\n","import { ButtonHTMLAttributes } from 'react'\r\nimport { useContext } from 'react'\r\nimport { ThemeSelector } from '../../contexts/ThemeSelectorContext'\r\n\r\n// import '../styles/button.scss';\r\n\r\nimport { SwitchContainer, InsideIndicator } from './style'\r\n\r\nexport function SwitchComponent() {\r\n  const value = useContext(ThemeSelector)\r\n  return (\r\n    <SwitchContainer\r\n      state={value.dark}\r\n      className={`${value.dark ? 'dark' : ''}`}\r\n      onClick={() => value.SetThemeProvider()}\r\n    >\r\n      <InsideIndicator />\r\n    </SwitchContainer>\r\n  )\r\n}\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { useEffect, useState, useContext } from 'react'\n\nimport Home from './pages/Home'\nimport NewRoom from './pages/NewRoom'\nimport Room from './pages/Room/index.'\nimport { AdminRoom } from './pages/AdminRoom'\nimport { ThemeProvider } from 'styled-components'\nimport { SelectTheme } from './styles/theme'\n\nimport { AuthContextProvider } from './contexts/AuthContext'\nimport { ThemeSelector } from './contexts/ThemeSelectorContext'\nimport GlobalStyle from './styles/global'\nimport { SwitchComponent } from './components/Switch'\n\nfunction App() {\n  const [theme, setTheme] = useState({})\n  const value = useContext(ThemeSelector)\n\n  useEffect(() => {\n    setTheme(SelectTheme(value.dark))\n  }, [value])\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle theme={theme} />\n        <SwitchComponent />\n        <AuthContextProvider>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/rooms/new\" component={NewRoom} />\n            <Route path=\"/rooms/:id\" component={Room} />\n            <Route path=\"/admin/rooms/:id\" component={AdminRoom} />\n          </Switch>\n        </AuthContextProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './services/firebase'\nimport { ThemeSelectorContextProvider } from './contexts/ThemeSelectorContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeSelectorContextProvider>\n      <App />\n    </ThemeSelectorContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}